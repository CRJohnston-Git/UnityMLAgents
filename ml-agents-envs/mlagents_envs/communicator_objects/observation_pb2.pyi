"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CompressionTypeProto:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CompressionTypeProtoEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CompressionTypeProto.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NONE: _CompressionTypeProto.ValueType  # 0
    PNG: _CompressionTypeProto.ValueType  # 1

class CompressionTypeProto(_CompressionTypeProto, metaclass=_CompressionTypeProtoEnumTypeWrapper): ...

NONE: CompressionTypeProto.ValueType  # 0
PNG: CompressionTypeProto.ValueType  # 1
global___CompressionTypeProto = CompressionTypeProto

class _ObservationTypeProto:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ObservationTypeProtoEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ObservationTypeProto.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DEFAULT: _ObservationTypeProto.ValueType  # 0
    GOAL_SIGNAL: _ObservationTypeProto.ValueType  # 1

class ObservationTypeProto(_ObservationTypeProto, metaclass=_ObservationTypeProtoEnumTypeWrapper): ...

DEFAULT: ObservationTypeProto.ValueType  # 0
GOAL_SIGNAL: ObservationTypeProto.ValueType  # 1
global___ObservationTypeProto = ObservationTypeProto

@typing_extensions.final
class ObservationProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class FloatData(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DATA_FIELD_NUMBER: builtins.int
        @property
        def data(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            data: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

    SHAPE_FIELD_NUMBER: builtins.int
    COMPRESSION_TYPE_FIELD_NUMBER: builtins.int
    COMPRESSED_DATA_FIELD_NUMBER: builtins.int
    FLOAT_DATA_FIELD_NUMBER: builtins.int
    COMPRESSED_CHANNEL_MAPPING_FIELD_NUMBER: builtins.int
    DIMENSION_PROPERTIES_FIELD_NUMBER: builtins.int
    OBSERVATION_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    compression_type: global___CompressionTypeProto.ValueType
    compressed_data: builtins.bytes
    @property
    def float_data(self) -> global___ObservationProto.FloatData: ...
    @property
    def compressed_channel_mapping(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def dimension_properties(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    observation_type: global___ObservationTypeProto.ValueType
    name: builtins.str
    """Optional name of the observation.
    This will be set to the ISensor name when writing,
    and read into the ObservationSpec in the low-level API
    """
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        compression_type: global___CompressionTypeProto.ValueType = ...,
        compressed_data: builtins.bytes = ...,
        float_data: global___ObservationProto.FloatData | None = ...,
        compressed_channel_mapping: collections.abc.Iterable[builtins.int] | None = ...,
        dimension_properties: collections.abc.Iterable[builtins.int] | None = ...,
        observation_type: global___ObservationTypeProto.ValueType = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["compressed_data", b"compressed_data", "float_data", b"float_data", "observation_data", b"observation_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compressed_channel_mapping", b"compressed_channel_mapping", "compressed_data", b"compressed_data", "compression_type", b"compression_type", "dimension_properties", b"dimension_properties", "float_data", b"float_data", "name", b"name", "observation_data", b"observation_data", "observation_type", b"observation_type", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["observation_data", b"observation_data"]) -> typing_extensions.Literal["compressed_data", "float_data"] | None: ...

global___ObservationProto = ObservationProto
